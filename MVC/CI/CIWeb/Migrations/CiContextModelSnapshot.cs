// <auto-generated />
using System;
using CI.Entities.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CIWeb.Migrations
{
    [DbContext(typeof(CiContext))]
    partial class CiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CIWeb.Models.Admin", b =>
                {
                    b.Property<long>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("admin_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AdminId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("AdminId")
                        .HasName("PK__admin__43AA4141C62062DC");

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.Banner", b =>
                {
                    b.Property<long>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("banner_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BannerId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("image");

                    b.Property<int?>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort_order")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("BannerId")
                        .HasName("PK__banner__10373C342E1231E7");

                    b.ToTable("banner", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.City", b =>
                {
                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("city_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CityId"));

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("CityId")
                        .HasName("PK__city__031491A8A16C1EE4");

                    b.HasIndex("CountryId");

                    b.ToTable("city", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.CmsPage", b =>
                {
                    b.Property<long>("CmsPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("cms_page_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CmsPageId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("slug");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("CmsPageId")
                        .HasName("PK__cms_page__B46D5B527292911B");

                    b.ToTable("cms_page", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.Comment", b =>
                {
                    b.Property<long>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("comment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CommentId"));

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("approval_status")
                        .HasDefaultValueSql("('pending')");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("CommentId")
                        .HasName("PK__comment__E7957687B158C918");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("comment", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.Country", b =>
                {
                    b.Property<long>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CountryId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Iso")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("iso");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("CountryId")
                        .HasName("PK__country__7E8CD05594670E4B");

                    b.ToTable("country", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.FavoriteMission", b =>
                {
                    b.Property<long>("FavouriteMissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("favourite_mission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FavouriteMissionId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("FavouriteMissionId")
                        .HasName("PK__favorite__94E4D8CAEAD00364");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("favorite_mission", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.GoalMission", b =>
                {
                    b.Property<long>("GoalMissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("goal_mission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GoalMissionId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("GoalObjectiveText")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("goal_objective_text");

                    b.Property<string>("GoalValue")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("goal_value");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("GoalMissionId")
                        .HasName("PK__goal_mis__358E02C7CAC34D0E");

                    b.HasIndex("MissionId");

                    b.ToTable("goal_mission", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.Mission", b =>
                {
                    b.Property<long>("MissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionId"));

                    b.Property<string>("Availability")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("availability");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint")
                        .HasColumnName("city_id");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("MissionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("mission_type");

                    b.Property<string>("OrganizationDetail")
                        .HasColumnType("text")
                        .HasColumnName("organization_detail");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("organization_name");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text")
                        .HasColumnName("short_description");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<long>("ThemeId")
                        .HasColumnType("bigint")
                        .HasColumnName("theme_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionId")
                        .HasName("PK__mission__B5419AB2C32661E7");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ThemeId");

                    b.ToTable("mission", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.MissionApplication", b =>
                {
                    b.Property<long>("MissionApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_application_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionApplicationId"));

                    b.Property<DateTime>("AppliedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("applied_at");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("approval_status")
                        .HasDefaultValueSql("('pending')");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("MissionApplicationId")
                        .HasName("PK__mission___DF92838AED1FAB6A");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("mission_application", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.MissionDocument", b =>
                {
                    b.Property<long>("MissionDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_document_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionDocumentId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("document_name");

                    b.Property<string>("DocumentPath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("document_path");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("document_type");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionDocumentId")
                        .HasName("PK__mission___E80E0CC89B678847");

                    b.HasIndex("MissionId");

                    b.ToTable("mission_document", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.MissionInvite", b =>
                {
                    b.Property<long>("MissionInviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_invite_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionInviteId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("FromUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("from_user_id");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<long>("ToUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("to_user_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionInviteId")
                        .HasName("PK__mission___A97ED158B048A706");

                    b.HasIndex("FromUserId");

                    b.HasIndex("MissionId");

                    b.HasIndex("ToUserId");

                    b.ToTable("mission_invite", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.MissionMedium", b =>
                {
                    b.Property<long>("MissionMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_media_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionMediaId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Default")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("default_")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("MediaName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("media_name");

                    b.Property<string>("MediaPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("media_path");

                    b.Property<string>("MediaType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("media_type");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionMediaId")
                        .HasName("PK__mission___848A78E8E0B91848");

                    b.HasIndex("MissionId");

                    b.ToTable("mission_media", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.MissionRating", b =>
                {
                    b.Property<long>("MissionRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_rating_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionRatingId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("MissionRatingId")
                        .HasName("PK__mission___320E517204FA845F");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("mission_rating", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.MissionSkill", b =>
                {
                    b.Property<long>("MissionSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_skill_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionSkillId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long?>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<long>("SkillId")
                        .HasColumnType("bigint")
                        .HasColumnName("skill_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionSkillId")
                        .HasName("PK__mission___8271200849820C08");

                    b.HasIndex("MissionId");

                    b.HasIndex("SkillId");

                    b.ToTable("mission_skill", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.MissionTheme", b =>
                {
                    b.Property<long>("MissionThemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("mission_theme_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionThemeId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<byte>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("MissionThemeId")
                        .HasName("PK__mission___4925C5AC3529762B");

                    b.ToTable("mission_theme", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.PasswordReset", b =>
                {
                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasMaxLength(191)
                        .HasColumnType("nvarchar(191)")
                        .HasColumnName("email");

                    b.Property<string>("Token")
                        .HasMaxLength(191)
                        .HasColumnType("nvarchar(191)")
                        .HasColumnName("token");

                    b.ToTable("password_reset", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.Skill", b =>
                {
                    b.Property<long>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("skill_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SkillId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("SkillName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("skill_name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("SkillId")
                        .HasName("PK__skill__FBBA8379C3ADD75D");

                    b.ToTable("skill", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.Story", b =>
                {
                    b.Property<long>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("story_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("published_at");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('draft')");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("StoryId")
                        .HasName("PK__story__66339C5636E973D0");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("story", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.StoryInvite", b =>
                {
                    b.Property<long>("StoryInviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("story_invite_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StoryInviteId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("FromUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("from_user_id");

                    b.Property<long>("StoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("story_id");

                    b.Property<long>("ToUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("to_user_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("StoryInviteId")
                        .HasName("PK__story_in__04497867E8BA21BD");

                    b.HasIndex("FromUserId");

                    b.HasIndex("StoryId");

                    b.HasIndex("ToUserId");

                    b.ToTable("story_invite", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.StoryMedium", b =>
                {
                    b.Property<long>("StoryMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("story_media_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StoryMediaId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("StoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("story_id");

                    b.Property<string>("StoryPath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("story_path");

                    b.Property<string>("StoryType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("story_type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("StoryMediaId")
                        .HasName("PK__story_me__29BD053C9518EB78");

                    b.HasIndex("StoryId");

                    b.ToTable("story_media", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.Timesheet", b =>
                {
                    b.Property<long>("TimesheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("timesheet_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TimesheetId"));

                    b.Property<int?>("Action")
                        .HasColumnType("int")
                        .HasColumnName("action");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DateVolunteered")
                        .HasColumnType("datetime")
                        .HasColumnName("date_volunteered");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long?>("MissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("mission_id");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("('pending')");

                    b.Property<TimeSpan?>("TimesheetTime")
                        .HasColumnType("time")
                        .HasColumnName("timesheet_time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("TimesheetId")
                        .HasName("PK__timeshee__7BBF5068B66D089A");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("timesheet", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("avatar");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint")
                        .HasColumnName("city_id");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Department")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("department");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("email");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("employee_id");

                    b.Property<string>("FirstName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("last_name");

                    b.Property<string>("LinkedInUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("linked_in_url");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int")
                        .HasColumnName("phone_number");

                    b.Property<string>("ProfileText")
                        .HasColumnType("text")
                        .HasColumnName("profile_text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<string>("WhyIVolunteer")
                        .HasColumnType("text")
                        .HasColumnName("why_i_volunteer");

                    b.HasKey("UserId")
                        .HasName("PK__users__B9BE370FE735EC63");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.UserSkill", b =>
                {
                    b.Property<long>("UserSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_skill_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserSkillId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at");

                    b.Property<long>("SkillId")
                        .HasColumnType("bigint")
                        .HasColumnName("skill_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("UserSkillId")
                        .HasName("PK__user_ski__FD3B576B2A735A6A");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("user_skill", (string)null);
                });

            modelBuilder.Entity("CIWeb.Models.City", b =>
                {
                    b.HasOne("CIWeb.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__city__country_id__3C69FB99");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CIWeb.Models.Comment", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("Comments")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__comment__mission__72C60C4A");

                    b.HasOne("CIWeb.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__comment__user_id__71D1E811");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIWeb.Models.FavoriteMission", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("FavoriteMissions")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__favorite___missi__00200768");

                    b.HasOne("CIWeb.Models.User", "User")
                        .WithMany("FavoriteMissions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__favorite___user___7F2BE32F");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIWeb.Models.GoalMission", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("GoalMissions")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__goal_miss__missi__05D8E0BE");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("CIWeb.Models.Mission", b =>
                {
                    b.HasOne("CIWeb.Models.City", "City")
                        .WithMany("Missions")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__mission__city_id__6477ECF3");

                    b.HasOne("CIWeb.Models.Country", "Country")
                        .WithMany("Missions")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__mission__country__656C112C");

                    b.HasOne("CIWeb.Models.MissionTheme", "Theme")
                        .WithMany("Missions")
                        .HasForeignKey("ThemeId")
                        .IsRequired()
                        .HasConstraintName("FK__mission__theme_i__66603565");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("CIWeb.Models.MissionApplication", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("MissionApplications")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_a__missi__0C85DE4D");

                    b.HasOne("CIWeb.Models.User", "User")
                        .WithMany("MissionApplications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_a__user___0D7A0286");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIWeb.Models.MissionDocument", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("MissionDocuments")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_d__missi__14270015");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("CIWeb.Models.MissionInvite", b =>
                {
                    b.HasOne("CIWeb.Models.User", "FromUser")
                        .WithMany("MissionInviteFromUsers")
                        .HasForeignKey("FromUserId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_i__from___1AD3FDA4");

                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("MissionInvites")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_i__missi__19DFD96B");

                    b.HasOne("CIWeb.Models.User", "ToUser")
                        .WithMany("MissionInviteToUsers")
                        .HasForeignKey("ToUserId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_i__to_us__1BC821DD");

                    b.Navigation("FromUser");

                    b.Navigation("Mission");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("CIWeb.Models.MissionMedium", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("MissionMedia")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_m__missi__2180FB33");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("CIWeb.Models.MissionRating", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("MissionRatings")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_r__missi__282DF8C2");

                    b.HasOne("CIWeb.Models.User", "User")
                        .WithMany("MissionRatings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_r__user___29221CFB");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIWeb.Models.MissionSkill", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("MissionSkills")
                        .HasForeignKey("MissionId")
                        .HasConstraintName("FK__mission_s__missi__3587F3E0");

                    b.HasOne("CIWeb.Models.Skill", "Skill")
                        .WithMany("MissionSkills")
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK__mission_s__skill__3493CFA7");

                    b.Navigation("Mission");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("CIWeb.Models.Story", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("Stories")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__story__mission_i__3E1D39E1");

                    b.HasOne("CIWeb.Models.User", "User")
                        .WithMany("Stories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__story__user_id__3F115E1A");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIWeb.Models.StoryInvite", b =>
                {
                    b.HasOne("CIWeb.Models.User", "FromUser")
                        .WithMany("StoryInviteFromUsers")
                        .HasForeignKey("FromUserId")
                        .IsRequired()
                        .HasConstraintName("FK__story_inv__from___498EEC8D");

                    b.HasOne("CIWeb.Models.Story", "Story")
                        .WithMany("StoryInvites")
                        .HasForeignKey("StoryId")
                        .IsRequired()
                        .HasConstraintName("FK__story_inv__story__489AC854");

                    b.HasOne("CIWeb.Models.User", "ToUser")
                        .WithMany("StoryInviteToUsers")
                        .HasForeignKey("ToUserId")
                        .IsRequired()
                        .HasConstraintName("FK__story_inv__to_us__4A8310C6");

                    b.Navigation("FromUser");

                    b.Navigation("Story");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("CIWeb.Models.StoryMedium", b =>
                {
                    b.HasOne("CIWeb.Models.Story", "Story")
                        .WithMany("StoryMedia")
                        .HasForeignKey("StoryId")
                        .IsRequired()
                        .HasConstraintName("FK__story_med__story__503BEA1C");

                    b.Navigation("Story");
                });

            modelBuilder.Entity("CIWeb.Models.Timesheet", b =>
                {
                    b.HasOne("CIWeb.Models.Mission", "Mission")
                        .WithMany("Timesheets")
                        .HasForeignKey("MissionId")
                        .HasConstraintName("FK__timesheet__missi__55F4C372");

                    b.HasOne("CIWeb.Models.User", "User")
                        .WithMany("Timesheets")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__timesheet__user___56E8E7AB");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIWeb.Models.User", b =>
                {
                    b.HasOne("CIWeb.Models.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__users__city_id__47DBAE45");

                    b.HasOne("CIWeb.Models.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__users__country_i__48CFD27E");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CIWeb.Models.UserSkill", b =>
                {
                    b.HasOne("CIWeb.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK__user_skil__skill__5D95E53A");

                    b.HasOne("CIWeb.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__user_skil__user___5E8A0973");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CIWeb.Models.City", b =>
                {
                    b.Navigation("Missions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CIWeb.Models.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Missions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CIWeb.Models.Mission", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavoriteMissions");

                    b.Navigation("GoalMissions");

                    b.Navigation("MissionApplications");

                    b.Navigation("MissionDocuments");

                    b.Navigation("MissionInvites");

                    b.Navigation("MissionMedia");

                    b.Navigation("MissionRatings");

                    b.Navigation("MissionSkills");

                    b.Navigation("Stories");

                    b.Navigation("Timesheets");
                });

            modelBuilder.Entity("CIWeb.Models.MissionTheme", b =>
                {
                    b.Navigation("Missions");
                });

            modelBuilder.Entity("CIWeb.Models.Skill", b =>
                {
                    b.Navigation("MissionSkills");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("CIWeb.Models.Story", b =>
                {
                    b.Navigation("StoryInvites");

                    b.Navigation("StoryMedia");
                });

            modelBuilder.Entity("CIWeb.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("FavoriteMissions");

                    b.Navigation("MissionApplications");

                    b.Navigation("MissionInviteFromUsers");

                    b.Navigation("MissionInviteToUsers");

                    b.Navigation("MissionRatings");

                    b.Navigation("Stories");

                    b.Navigation("StoryInviteFromUsers");

                    b.Navigation("StoryInviteToUsers");

                    b.Navigation("Timesheets");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
